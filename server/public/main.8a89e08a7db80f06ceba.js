!function(t){function e(e){for(var a,i,u=e[0],s=e[1],c=e[2],d=0,p=[];d<u.length;d++)i=u[d],Object.prototype.hasOwnProperty.call(r,i)&&r[i]&&p.push(r[i][0]),r[i]=0;for(a in s)Object.prototype.hasOwnProperty.call(s,a)&&(t[a]=s[a]);for(l&&l(e);p.length;)p.shift()();return o.push.apply(o,c||[]),n()}function n(){for(var t,e=0;e<o.length;e++){for(var n=o[e],a=!0,u=1;u<n.length;u++){var s=n[u];0!==r[s]&&(a=!1)}a&&(o.splice(e--,1),t=i(i.s=n[0]))}return t}var a={},r={0:0},o=[];function i(e){if(a[e])return a[e].exports;var n=a[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.e=function(t){var e=[],n=r[t];if(0!==n)if(n)e.push(n[2]);else{var a=new Promise((function(e,a){n=r[t]=[e,a]}));e.push(n[2]=a);var o,u=document.createElement("script");u.charset="utf-8",u.timeout=120,i.nc&&u.setAttribute("nonce",i.nc),u.src=function(t){return i.p+"main."+{3:"d8bee857ed5317cd89c8",4:"08c1ac9ea9638d8cf1bb",5:"eb558f95c0f7aea7ce65",6:"4377ef92e734d0064458",7:"09ad7c72c90a27615b65"}[t]+".js"}(t);var s=new Error;o=function(e){u.onerror=u.onload=null,clearTimeout(c);var n=r[t];if(0!==n){if(n){var a=e&&("load"===e.type?"missing":e.type),o=e&&e.target&&e.target.src;s.message="Loading chunk "+t+" failed.\n("+a+": "+o+")",s.name="ChunkLoadError",s.type=a,s.request=o,n[1](s)}r[t]=void 0}};var c=setTimeout((function(){o({type:"timeout",target:u})}),12e4);u.onerror=u.onload=o,document.head.appendChild(u)}return Promise.all(e)},i.m=t,i.c=a,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)i.d(n,a,function(e){return t[e]}.bind(null,a));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i.oe=function(t){throw console.error(t),t};var u=window.webpackJsonp=window.webpackJsonp||[],s=u.push.bind(u);u.push=e,u=u.slice();for(var c=0;c<u.length;c++)e(u[c]);var l=s;o.push([77,1,2]),n()}({12:function(t,e,n){"use strict";n.d(e,"d",(function(){return o})),n.d(e,"a",(function(){return i})),n.d(e,"b",(function(){return u})),n.d(e,"c",(function(){return s}));var a=n(22),r=n.n(a);const o={async fail(t){await r.a.fire({icon:"error",text:t})},async success(t,e=1e3){await r.a.fire({icon:"success",text:t,timer:e})}},i=t=>t.split("#").map(t=>t.trim()).filter(t=>t),u=t=>t.map(t=>"#"+t).join(" "),s=()=>{const t=new Date;return`${t.getFullYear()}-${(t.getMonth()+1).toString().padStart(2,0)}-${t.getDate().toString().padStart(2,0)}`}},19:function(t,e,n){"use strict";var a=n(9),r=n.n(a),o=n(12);const i=()=>({headers:{Authorization:"Bearer "+localStorage.getItem("token")}});e.a={async checkId(t){try{const{data:e}=await r.a.post("https://self-quiz.herokuapp.com/auth/idcheck",{userId:t}),{idValidation:n}=e;return n}catch(t){return!1}},async signUp(t,e,n){try{const{data:a}=await r.a.post("https://self-quiz.herokuapp.com/auth/signup",{userId:t,userPw:e,userName:n}),{state:o}=a;return o}catch(t){return!1}},async login(t,e){try{const{data:n}=await r.a.post("https://self-quiz.herokuapp.com/auth/login",{userId:t,userPw:e}),{token:a}=n;return a}catch(t){return null}},async getUserName(){try{const{data:t}=await r.a.get("https://self-quiz.herokuapp.com/auth",i()),{user:e}=t;return e}catch(t){return null}},async addQuiz(t,e,n){try{const a={question:t,answer:e,tags:n,lastSolved:Object(o.c)()},{data:u}=await r.a.post("https://self-quiz.herokuapp.com/quiz",a,i()),{newQuiz:s}=u;return s}catch(t){return null}},async getQuizzes(){try{const{data:t}=await r.a.get("https://self-quiz.herokuapp.com/quiz",i()),{quizzes:e}=t;return e}catch(t){return[]}},async editQuiz(t,e,n,a){try{const o={quizId:t,question:e,answer:n,tags:a};return await r.a.patch("https://self-quiz.herokuapp.com/quiz/edit",o,i()),!0}catch(t){return!1}},async deleteQuiz(t){try{return await r.a.delete("https://self-quiz.herokuapp.com/quiz/"+t,i()),!0}catch(t){return!1}},async passQuiz(t){try{const e=Object(o.c)();return await r.a.patch("https://self-quiz.herokuapp.com/quiz/pass",{quizId:t,lastSolved:e},i()),!0}catch(t){return!1}},async failQuiz(t){try{const e=Object(o.c)();return await r.a.patch("https://self-quiz.herokuapp.com/quiz/fail",{quizId:t,lastSolved:e},i()),!0}catch(t){return!1}},async keepQuiz(t){try{const e=Object(o.c)();return await r.a.patch("https://self-quiz.herokuapp.com/quiz/keep",{quizId:t,lastSolved:e},i()),!0}catch(t){return!1}}}},25:function(t,e,n){"use strict";n.d(e,"n",(function(){return d})),n.d(e,"j",(function(){return p})),n.d(e,"l",(function(){return f})),n.d(e,"i",(function(){return m})),n.d(e,"a",(function(){return z})),n.d(e,"g",(function(){return y})),n.d(e,"d",(function(){return g})),n.d(e,"k",(function(){return A})),n.d(e,"b",(function(){return b})),n.d(e,"h",(function(){return v})),n.d(e,"m",(function(){return q})),n.d(e,"e",(function(){return O})),n.d(e,"f",(function(){return S}));var a=n(18),r=n(12);const o={getCurrentDate(){const t=new Date;return`${t.getFullYear()}-${t.getMonth()+1}-${t.getDate()}`},getTotalDay(t){const[e,n,a]=t.split("-").map(t=>Number(t));return 12*e*30+30*n+a}},i={1:1,2:3,3:7,4:15,5:30,6:60,7:120};var u=n(19);const{reducer:s,actions:c}=Object(a.b)({name:"self-quiz",initialState:{user:{name:"",token:localStorage.getItem("token")},form:{login:{id:"",pw:""},quiz:{_id:"",question:"",answer:"",tagString:""}},quizzes:[],modalShowing:{overlay:!1,adding:!1,archive:!1,editting:!1},todays:{answerOn:!1,quizzes:[]}},reducers:{setUserName:(t,{payload:e})=>({...t,user:{...t.user,name:e}}),setToken:(t,{payload:e})=>({...t,user:{...t.user,token:e}}),setLoginForm:(t,{payload:{type:e,value:n}})=>({...t,form:{...t.form,login:{...t.form.login,[e]:n}}}),setQuizForm:(t,{payload:e})=>({...t,form:{...t.form,quiz:{...t.form.quiz,...e}}}),resetQuizForm:t=>({...t,form:{...t.form,quiz:{...t.form.quiz,_id:"",question:"",answer:"",tagString:""}}}),setQuizzes:(t,{payload:e})=>({...t,quizzes:e}),addQuiz:(t,{payload:e})=>({...t,quizzes:[...t.quizzes,e]}),removeQuiz:(t,{payload:e})=>({...t,quizzes:t.quizzes.filter(t=>t._id!==e)}),editQuiz(t,{payload:e}){const{_id:n,tagString:a,...o}=e,i=Object(r.a)(a);return{...t,quizzes:t.quizzes.map(t=>t._id!==n?t:{...t,...o,tags:i})}},setModalState:(t,{payload:{type:e,showing:n}})=>({...t,modalShowing:{...t.modalShowing,[e]:n,overlay:n}}),closeAllModal:t=>({...t,modalShowing:{...t.modalShowing,archive:!1,adding:!1,overlay:!1,editting:!1,todays:!1},quizForm:{...t.quizForm,question:"",answer:"",tagString:""}}),setTodaysQuizzes:(t,{payload:e})=>({...t,todays:{...t.todays,quizzes:[...e]}}),removeTodaysQuiz:(t,{payload:e})=>({...t,todays:{...t.todays,quizzes:t.todays.quizzes.filter(t=>t._id!==e)}}),setTodaysAnswerOn:(t,{payload:e})=>({...t,todays:{...t.todays,answerOn:e}})}}),{setUserName:l,setToken:d,setLoginForm:p,setQuizForm:f,resetQuizForm:m,setQuizzes:h,addQuiz:z,removeQuiz:y,editQuiz:g,setModalState:A,closeAllModal:b,setTodaysQuizzes:w,removeTodaysQuiz:v,setTodaysAnswerOn:q}=c,O=()=>async t=>{const e=await u.a.getQuizzes();t(h(e));const n=(t=>t.sort((t,e)=>t.lastSolved.localeCompare(e.lastSolved)))((t=>{const e=o.getCurrentDate(),n=o.getTotalDay(e);return t.filter(t=>{const{layer:e,lastSolved:a}=t,r=o.getTotalDay(a),u=n-r;return[1,2,3,4,5,6,7].some(t=>e<=t&&u>=i[t])})})(e));t(w(n))},S=()=>async t=>{const e=await u.a.getUserName();t(l(e))};e.c=s},41:function(t,e,n){"use strict";e.a=n.p+"fonts/NotoSansKR-Medium.woff2!static"},69:function(t,e,n){var a=n(70),r=n(71);"string"==typeof(r=r.__esModule?r.default:r)&&(r=[[t.i,r,""]]);var o={insert:"head",singleton:!1};a(r,o);t.exports=r.locals||{}},71:function(t,e,n){"use strict";n.r(e);var a=n(39),r=n.n(a),o=n(40),i=n.n(o),u=n(41),s=r()(!0),c=i()(u.a);s.push([t.i,'@font-face {\n  font-family: "NotoSansKR-Medium";\n  src: local(※), url('+c+') format("woff2");\n}\n\n* {\n  font-family: "NotoSansKR-Medium";\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  background: linear-gradient(90deg,#111d2a, #244a72);\n  height: 100vh;\n}\n\n@media (max-width: 992px) {\n  html {\n    font-size: 12px;\n  }\n}\n@media (max-width: 768px) {\n  html {\n    font-size: 8px;\n  }\n}\n@media (max-width: 480px) {\n  html {\n    font-size: 5px;\n  }\n}',"",{version:3,sources:["webpack://src/styles/reset.css"],names:[],mappings:"AAAA;EACE,gCAAgC;EAChC,sEAA6D;AAC/D;;AAEA;EACE,gCAAgC;EAChC,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,mDAAmD;EACnD,aAAa;AACf;;AAEA;EACE;IACE,eAAe;EACjB;AACF;AACA;EACE;IACE,cAAc;EAChB;AACF;AACA;EACE;IACE,cAAc;EAChB;AACF",sourcesContent:['@font-face {\n  font-family: "NotoSansKR-Medium";\n  src: local(※), url("NotoSansKR-Medium.woff2") format("woff2");\n}\n\n* {\n  font-family: "NotoSansKR-Medium";\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  background: linear-gradient(90deg,#111d2a, #244a72);\n  height: 100vh;\n}\n\n@media (max-width: 992px) {\n  html {\n    font-size: 12px;\n  }\n}\n@media (max-width: 768px) {\n  html {\n    font-size: 8px;\n  }\n}\n@media (max-width: 480px) {\n  html {\n    font-size: 5px;\n  }\n}'],sourceRoot:""}]),e.default=s},77:function(t,e,n){"use strict";n.r(e);var a=n(0),r=n.n(a),o=n(17),i=n.n(o),u=n(15),s=n(18),c=n(25),l=Object(s.a)({reducer:c.c}),d=(n(69),n(26)),p=n(2),f=n(3);const m=Object(a.lazy)(()=>n.e(6).then(n.bind(null,82))),h=Object(a.lazy)(()=>n.e(7).then(n.bind(null,81))),z=Object(a.lazy)(()=>n.e(4).then(n.bind(null,84))),y=Object(a.lazy)(()=>n.e(3).then(n.bind(null,83)));i.a.render(Object(f.a)(u.a,{store:l},Object(f.a)((function(){const t=Object(u.c)(t=>t.modalShowing);return Object(f.a)(r.a.Fragment,null,Object(f.a)(a.Suspense,{fallback:Object(f.a)("div",null,"로딩중")},t.overlay&&Object(f.a)(h,null),Object(f.a)(d.a,null,Object(f.a)(p.d,null,Object(f.a)(p.b,{exact:!0,path:"/"},Object(f.a)(m,null)),Object(f.a)(p.b,{path:"/page/todaysquiz"},Object(f.a)(z,null)),Object(f.a)(p.b,{path:"/page/archive"},Object(f.a)(y,null))))))}),null)),document.getElementById("app"))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,