!function(t){function e(e){for(var a,r,c=e[0],u=e[1],d=e[2],l=0,p=[];l<c.length;l++)r=c[l],Object.prototype.hasOwnProperty.call(o,r)&&o[r]&&p.push(o[r][0]),o[r]=0;for(a in u)Object.prototype.hasOwnProperty.call(u,a)&&(t[a]=u[a]);for(s&&s(e);p.length;)p.shift()();return i.push.apply(i,d||[]),n()}function n(){for(var t,e=0;e<i.length;e++){for(var n=i[e],a=!0,c=1;c<n.length;c++){var u=n[c];0!==o[u]&&(a=!1)}a&&(i.splice(e--,1),t=r(r.s=n[0]))}return t}var a={},o={0:0},i=[];function r(e){if(a[e])return a[e].exports;var n=a[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.e=function(t){var e=[],n=o[t];if(0!==n)if(n)e.push(n[2]);else{var a=new Promise((function(e,a){n=o[t]=[e,a]}));e.push(n[2]=a);var i,c=document.createElement("script");c.charset="utf-8",c.timeout=120,r.nc&&c.setAttribute("nonce",r.nc),c.src=function(t){return r.p+"main."+{3:"3630b88a2f2f46cce63a",4:"015ab54892473782a85e"}[t]+".js"}(t);var u=new Error;i=function(e){c.onerror=c.onload=null,clearTimeout(d);var n=o[t];if(0!==n){if(n){var a=e&&("load"===e.type?"missing":e.type),i=e&&e.target&&e.target.src;u.message="Loading chunk "+t+" failed.\n("+a+": "+i+")",u.name="ChunkLoadError",u.type=a,u.request=i,n[1](u)}o[t]=void 0}};var d=setTimeout((function(){i({type:"timeout",target:c})}),12e4);c.onerror=c.onload=i,document.head.appendChild(c)}return Promise.all(e)},r.m=t,r.c=a,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)r.d(n,a,function(e){return t[e]}.bind(null,a));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r.oe=function(t){throw console.error(t),t};var c=window.webpackJsonp=window.webpackJsonp||[],u=c.push.bind(c);c.push=e,c=c.slice();for(var d=0;d<c.length;d++)e(c[d]);var s=u;i.push([79,1,2]),n()}({15:function(t,e,n){"use strict";var a=n(13),o=n.n(a),i=n(4);const r=()=>({headers:{Authorization:"Bearer "+localStorage.getItem("token")}});e.a={async checkId(t){try{const{data:e}=await o.a.post("https://self-quiz.herokuapp.com/auth/idcheck",{userId:t}),{idValidation:n}=e;return n}catch(t){return!1}},async signUp(t,e,n){try{const{data:a}=await o.a.post("https://self-quiz.herokuapp.com/auth/signup",{userId:t,userPw:e,userName:n}),{state:i}=a;return i}catch(t){return!1}},async login(t,e){try{const{data:n}=await o.a.post("https://self-quiz.herokuapp.com/auth/login",{userId:t,userPw:e}),{token:a}=n;return a}catch(t){return null}},async getUserName(){try{const{data:t}=await o.a.get("https://self-quiz.herokuapp.com/auth",r()),{user:e}=t;return e}catch(t){return null}},async addQuiz(t,e,n){try{const a={question:t,answer:e,tags:n,lastSolved:Object(i.c)()},{data:c}=await o.a.post("https://self-quiz.herokuapp.com/quiz",a,r()),{newQuiz:u}=c;return u}catch(t){return null}},async getQuizzes(){try{const{data:t}=await o.a.get("https://self-quiz.herokuapp.com/quiz",r()),{quizzes:e}=t;return e}catch(t){return[]}},async editQuiz(t,e,n,a){try{const i={quizId:t,question:e,answer:n,tags:a};return await o.a.patch("https://self-quiz.herokuapp.com/quiz/edit",i,r()),!0}catch(t){return!1}},async deleteQuiz(t){try{return await o.a.delete("https://self-quiz.herokuapp.com/quiz/"+t,r()),!0}catch(t){return!1}},async passQuiz(t){try{const e=Object(i.c)();return await o.a.patch("https://self-quiz.herokuapp.com/quiz/pass",{quizId:t,lastSolved:e},r()),!0}catch(t){return!1}},async failQuiz(t){try{const e=Object(i.c)();return await o.a.patch("https://self-quiz.herokuapp.com/quiz/fail",{quizId:t,lastSolved:e},r()),!0}catch(t){return!1}},async keepQuiz(t){try{const e=Object(i.c)();return await o.a.patch("https://self-quiz.herokuapp.com/quiz/keep",{quizId:t,lastSolved:e},r()),!0}catch(t){return!1}}}},2:function(t,e,n){"use strict";n.d(e,"a",(function(){return a})),n.d(e,"c",(function(){return o})),n.d(e,"b",(function(){return i}));const a={font:"#ffffff",red:"#bf0a0a",green:"#3a7970",light:"#3c75af",main:"#244a72",dark:"#111d2a",faintWhite:"#cfcfcf"},o={"#1":"3rem","#2":"2rem","#3":"1.5rem","#4":"1.2rem","#5":"1rem"},i={"#1":"7rem","#2":"5rem","#3":"4rem","#4":"3rem","#5":"2.5rem","#6":"2rem"}},38:function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));n(0);var a=n(2),o=n(1);const i={layout:{position:"fixed",top:"50%",left:"50%",transform:"translate(-50%, -50%)",width:"40rem",borderRadius:"0.5rem",backgroundColor:"white",boxShadow:"0 0 11px 0px "+a.a.main,zIndex:2,"@media (max-width: 768px)":{width:"90vw",borderRadius:"1.5rem"}},title:{fontSize:a.c["#3"],fontWeight:"bold",backgroundColor:a.a.main,color:a.a.font,padding:"0.5rem 1rem",boxSizing:"border-box",borderRadius:"0.4rem 0.4rem 0 0","@media (max-width: 768px)":{fontSize:a.b["#2"],padding:"1rem",borderRadius:"1.4rem 1.4rem 0 0"}},body:{padding:"2rem","@media (max-width: 768px)":{padding:"3rem"}}};function r({title:t,children:e}){return Object(o.a)("div",{css:i.layout},Object(o.a)("div",{css:i.title},t),Object(o.a)("div",{css:i.body},e))}},4:function(t,e,n){"use strict";n.d(e,"d",(function(){return i})),n.d(e,"a",(function(){return r})),n.d(e,"b",(function(){return c})),n.d(e,"c",(function(){return u}));var a=n(25),o=n.n(a);const i={async fail(t){await o.a.fire({icon:"error",text:t})},async success(t,e=1e3){await o.a.fire({icon:"success",text:t,timer:e})}},r=t=>t.split("#").map(t=>t.trim()).filter(t=>t),c=t=>t.map(t=>"#"+t).join(" "),u=()=>{const t=new Date;return`${t.getFullYear()}-${(t.getMonth()+1).toString().padStart(2,0)}-${t.getDate().toString().padStart(2,0)}`}},43:function(t,e,n){"use strict";e.a=n.p+"fonts/NotoSansKR-Medium.woff2!static"},7:function(t,e,n){"use strict";n.d(e,"p",(function(){return l})),n.d(e,"k",(function(){return p})),n.d(e,"n",(function(){return m})),n.d(e,"j",(function(){return h})),n.d(e,"m",(function(){return f})),n.d(e,"i",(function(){return b})),n.d(e,"a",(function(){return w})),n.d(e,"g",(function(){return z})),n.d(e,"d",(function(){return j})),n.d(e,"l",(function(){return y})),n.d(e,"b",(function(){return O})),n.d(e,"h",(function(){return v})),n.d(e,"o",(function(){return C})),n.d(e,"e",(function(){return S})),n.d(e,"f",(function(){return k}));var a=n(22),o=n(4);const i={getCurrentDate(){const t=new Date;return`${t.getFullYear()}-${t.getMonth()+1}-${t.getDate()}`},getTotalDay(t){const[e,n,a]=t.split("-").map(t=>Number(t));return 12*e*30+30*n+a}},r={1:1,2:3,3:7,4:15,5:30,6:60,7:120};var c=n(15);const{reducer:u,actions:d}=Object(a.b)({name:"self-quiz",initialState:{user:{name:"",token:localStorage.getItem("token")},form:{login:{id:"",pw:""},signup:{name:"",id:"",pw1:"",pw2:""},quiz:{_id:"",question:"",answer:"",tagString:""}},quizzes:[],modalShowing:{overlay:!1,adding:!1,archive:!1,editting:!1},todays:{answerOn:!1,quizzes:[]}},reducers:{setUserName:(t,{payload:e})=>({...t,user:{...t.user,name:e}}),setToken:(t,{payload:e})=>({...t,user:{...t.user,token:e}}),setLoginForm:(t,{payload:{type:e,value:n}})=>({...t,form:{...t.form,login:{...t.form.login,[e]:n}}}),setSignupForm:(t,{payload:{type:e,value:n}})=>({...t,form:{...t.form,signup:{...t.form.signup,[e]:n}}}),resetSignupForm:t=>({...t,form:{...t.form,signup:{...t.form.signup,name:"",id:"",pw1:"",pw2:""}}}),setQuizForm:(t,{payload:e})=>({...t,form:{...t.form,quiz:{...t.form.quiz,...e}}}),resetQuizForm:t=>({...t,form:{...t.form,quiz:{...t.form.quiz,_id:"",question:"",answer:"",tagString:""}}}),setQuizzes:(t,{payload:e})=>({...t,quizzes:e}),addQuiz:(t,{payload:e})=>({...t,quizzes:[...t.quizzes,e]}),removeQuiz:(t,{payload:e})=>({...t,quizzes:t.quizzes.filter(t=>t._id!==e)}),editQuiz(t,{payload:e}){const{_id:n,tagString:a,...i}=e,r=Object(o.a)(a);return{...t,quizzes:t.quizzes.map(t=>t._id!==n?t:{...t,...i,tags:r})}},setModalState:(t,{payload:{type:e,showing:n}})=>({...t,modalShowing:{...t.modalShowing,[e]:n,overlay:n}}),closeAllModal:t=>({...t,modalShowing:{...t.modalShowing,archive:!1,adding:!1,overlay:!1,editting:!1,todays:!1}}),setTodaysQuizzes:(t,{payload:e})=>({...t,todays:{...t.todays,quizzes:[...e]}}),removeTodaysQuiz:(t,{payload:e})=>({...t,todays:{...t.todays,quizzes:t.todays.quizzes.filter(t=>t._id!==e)}}),setTodaysAnswerOn:(t,{payload:e})=>({...t,todays:{...t.todays,answerOn:e}})}}),{setUserName:s,setToken:l,setLoginForm:p,setSignupForm:m,resetSignupForm:h,setQuizForm:f,resetQuizForm:b,setQuizzes:g,addQuiz:w,removeQuiz:z,editQuiz:j,setModalState:y,closeAllModal:O,setTodaysQuizzes:x,removeTodaysQuiz:v,setTodaysAnswerOn:C}=d,S=()=>async t=>{const e=await c.a.getQuizzes();t(g(e));const n=(t=>t.sort((t,e)=>t.lastSolved.localeCompare(e.lastSolved)))((t=>{const e=i.getCurrentDate(),n=i.getTotalDay(e);return t.filter(t=>{const{layer:e,lastSolved:a}=t,o=i.getTotalDay(a),c=n-o;return[1,2,3,4,5,6,7].some(t=>e<=t&&c>=r[t])})})(e));t(x(n))},k=()=>async t=>{const e=await c.a.getUserName();t(s(e))};e.c=u},71:function(t,e,n){var a=n(72),o=n(73);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[t.i,o,""]]);var i={insert:"head",singleton:!1};a(o,i);t.exports=o.locals||{}},73:function(t,e,n){"use strict";n.r(e);var a=n(41),o=n.n(a),i=n(42),r=n.n(i),c=n(43),u=o()(!0),d=r()(c.a);u.push([t.i,'@font-face {\n  font-family: "NotoSansKR-Medium";\n  src: local(※), url('+d+') format("woff2");\n}\n\n* {\n  font-family: "NotoSansKR-Medium";\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  background: linear-gradient(90deg,#111d2a, #244a72);\n  height: 100vh;\n}\n\n@media (max-width: 992px) {\n  html {\n    font-size: 12px;\n  }\n}\n@media (max-width: 768px) {\n  html {\n    font-size: 8px;\n  }\n}\n@media (max-width: 480px) {\n  html {\n    font-size: 5px;\n  }\n}',"",{version:3,sources:["webpack://src/styles/reset.css"],names:[],mappings:"AAAA;EACE,gCAAgC;EAChC,sEAA6D;AAC/D;;AAEA;EACE,gCAAgC;EAChC,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,mDAAmD;EACnD,aAAa;AACf;;AAEA;EACE;IACE,eAAe;EACjB;AACF;AACA;EACE;IACE,cAAc;EAChB;AACF;AACA;EACE;IACE,cAAc;EAChB;AACF",sourcesContent:['@font-face {\n  font-family: "NotoSansKR-Medium";\n  src: local(※), url("NotoSansKR-Medium.woff2") format("woff2");\n}\n\n* {\n  font-family: "NotoSansKR-Medium";\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  background: linear-gradient(90deg,#111d2a, #244a72);\n  height: 100vh;\n}\n\n@media (max-width: 992px) {\n  html {\n    font-size: 12px;\n  }\n}\n@media (max-width: 768px) {\n  html {\n    font-size: 8px;\n  }\n}\n@media (max-width: 480px) {\n  html {\n    font-size: 5px;\n  }\n}'],sourceRoot:""}]),e.default=u},79:function(t,e,n){"use strict";n.r(e);var a=n(0),o=n.n(a),i=n(21),r=n.n(i),c=n(5),u=n(22),d=n(7),s=Object(u.a)({reducer:d.c}),l=(n(71),n(19)),p=n(6),m=n(4),h=n(1);const f={display:"flex",justifyContent:"center",padding:"2rem",boxSizing:"border-box"};function b({children:t}){return Object(h.a)("div",{css:f},t)}var g=n(2);const w={button:{border:"none",borderRadius:"1rem",width:"100%",height:"18rem",margin:"0.5rem",boxShadow:"0 0 6px 0px "+g.a.faintWhite,background:"linear-gradient(45deg, black, transparent)",color:g.a.font,fontSize:g.c["#4"],fontWeight:"bold","&:hover":{backgroundColor:g.a.light,cursor:"pointer"},"@media (max-width: 768px)":{fontSize:g.b["#6"],height:"30vw"}},icon:{width:"3rem",margin:"0 auto","@media (max-width: 768px)":{width:"4rem"}}};function z({title:t,onClick:e,IconComponent:n}){return Object(h.a)("button",{type:"button",onClick:e,css:w.button},Object(h.a)("div",{css:w.icon},Object(h.a)(n,null)),t)}function j(){return Object(h.a)("svg",{viewBox:"-80 0 600 600"},Object(h.a)("path",{fill:"currentColor",d:"M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z"}))}function y(){return Object(h.a)("svg",{viewBox:"-50 0 512 512"},Object(h.a)("path",{fill:"currentColor",d:"M448 80v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V80c0-26.51 21.49-48 48-48h352c26.51 0 48 21.49 48 48zm-48 346V86a6 6 0 0 0-6-6H54a6 6 0 0 0-6 6v340a6 6 0 0 0 6 6h340a6 6 0 0 0 6-6zm-68.756-225.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C152.846 131.491 182.94 112 229.794 112c49.071 0 101.45 38.304 101.45 88.8zM266 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z"}))}function O(){return Object(h.a)("svg",{viewBox:"0 0 576 512"},Object(h.a)("path",{fill:"currentColor",d:"M527.9 224H480v-48c0-26.5-21.5-48-48-48H272l-64-64H48C21.5 64 0 85.5 0 112v288c0 26.5 21.5 48 48 48h400c16.5 0 31.9-8.5 40.7-22.6l79.9-128c20-31.9-3-73.4-40.7-73.4zM48 118c0-3.3 2.7-6 6-6h134.1l64 64H426c3.3 0 6 2.7 6 6v42H152c-16.8 0-32.4 8.8-41.1 23.2L48 351.4zm400 282H72l77.2-128H528z"}))}function x(){const t=Object(c.b)(),e=Object(p.g)();return Object(h.a)(b,null,Object(h.a)(z,{title:"문제 추가",onClick:()=>{t(Object(d.l)({type:"adding",showing:!0}))},IconComponent:j}),Object(h.a)(z,{title:"오늘의 문제",onClick:()=>{e.push("/page/todaysquiz")},IconComponent:y}),Object(h.a)(z,{title:"아카이브",onClick:()=>{e.push("/page/archive")},IconComponent:O}))}var v=n(15),C=n(38);const S={fontWeight:"bold",fontSize:g.c["#4"],marginTop:"1rem","@media (max-width: 768px)":{fontSize:g.b["#3"],marginTop:"2rem"}};function k({title:t}){return Object(h.a)("div",{css:S},t)}const A={display:"block",width:"100%",height:"8rem",fontSize:g.c["#5"],padding:"0.7rem",boxSizing:"border-box",borderRadius:"0.4rem",resize:"none","@media (max-width: 768px)":{height:"24rem",fontSize:g.b["#4"],borderRadius:"1.4rem"}};function q({value:t,onChange:e,placeholder:n=""}){return Object(h.a)("textarea",{onChange:e,value:t,css:A,placeholder:n})}const I={display:"block",width:"100%",height:"3rem",fontSize:g.c["#5"],padding:"0.7rem",boxSizing:"border-box",border:"1px solid #767676",borderRadius:"0.4rem","@media (max-width: 768px)":{height:"8rem",fontSize:g.b["#4"],borderRadius:"1.4rem"}};function E({value:t,onChange:e,placeholder:n=""}){return Object(h.a)("input",{onChange:e,value:t,css:I,placeholder:n})}const Q={width:"100%",marginTop:"2rem",height:"3rem",fontSize:g.c["#3"],fontWeight:"bold",color:g.a.font,backgroundColor:g.a.main,border:"none",borderRadius:"0.5rem","@media (max-width: 768px)":{height:"10rem",fontSize:g.b["#3"],marginTop:"4rem",borderRadius:"1.5rem"}};function T({title:t,onClick:e}){return Object(h.a)("button",{onClick:e,css:Q,type:"button"},t)}function M(){const t=Object(c.b)(),e=Object(c.c)(t=>t.form.quiz),{question:n,answer:a,tagString:o}=e,i=e=>n=>{const a={};a[e]=n.target.value,t(Object(d.m)(a))};return Object(h.a)(C.a,{title:"문제 만들기"},Object(h.a)(k,{title:"문제"}),Object(h.a)(q,{value:n,onChange:i("question"),placeholder:"문제를 입력해주세요."}),Object(h.a)(k,{title:"정답"}),Object(h.a)(q,{value:a,onChange:i("answer"),placeholder:"정답을 입력해주세요."}),Object(h.a)(k,{title:"#태그"}),Object(h.a)(E,{value:o,onChange:i("tagString"),placeholder:"#오늘의 #문제"}),Object(h.a)(T,{title:"확인",onClick:async()=>{const e=Object(m.a)(o),i=await v.a.addQuiz(n,a,e);i?(await m.d.success("추가되었습니다."),t(Object(d.a)(i)),t(Object(d.i)())):await m.d.fail("실패했습니다. 다시 시도해주세요.")}}))}const R={title:{padding:"3rem",boxSizing:"border-box",color:g.a.font,"@media (max-width: 768px)":{marginBottom:"5rem"}},name:{fontSize:g.c["#1"],fontWeight:"bold","@media (max-width: 768px)":{fontSize:g.b["#1"]}},text:{fontSize:g.c["#3"],"@media (max-width: 768px)":{fontSize:g.b["#4"]}}};function B({user:t,todays:e}){return Object(h.a)("div",{css:R.title},Object(h.a)("div",{css:R.name},t.name,"님,"),Object(h.a)("div",{css:R.text},"오늘 복습해야 할 문제는 총 ",e.quizzes.length,"문제 입니다."))}function F(){return Object(h.a)("svg",{viewBox:"0 0 512 512"},Object(h.a)("path",{fill:"currentColor",d:"M497 273L329 441c-15 15-41 4.5-41-17v-96H152c-13.3 0-24-10.7-24-24v-96c0-13.3 10.7-24 24-24h136V88c0-21.4 25.9-32 41-17l168 168c9.3 9.4 9.3 24.6 0 34zM192 436v-40c0-6.6-5.4-12-12-12H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h84c6.6 0 12-5.4 12-12V76c0-6.6-5.4-12-12-12H96c-53 0-96 43-96 96v192c0 53 43 96 96 96h84c6.6 0 12-5.4 12-12z"}))}const D={button:{width:"2.5rem",position:"absolute",right:"0",color:"#ffffff",cursor:"pointer",margin:"2rem","&:hover":{color:g.a.faintWhite},"@media (max-width: 768px)":{width:"5rem"}}};function H({onClick:t}){return Object(h.a)("div",{title:"로그아웃",css:D.button,onClick:t},Object(h.a)(F,null))}const _={display:"flex",flexDirection:"column",width:"60rem",height:"100vh",margin:"0 auto",justifyContent:"center","@media (max-width: 768px)":{width:"100vw"}};function L({children:t}){return Object(h.a)("div",{css:_},t)}function N(){const t=Object(c.b)(),{quizzes:e,modalShowing:n,user:i,todays:r}=Object(c.c)(t=>t);return Object(a.useEffect)(()=>{0===e.length&&t(Object(d.e)()),i.name||t(Object(d.f)())},[]),Object(h.a)(o.a.Fragment,null,Object(h.a)(H,{onClick:async()=>{localStorage.removeItem("token"),t(Object(d.p)(null)),await m.d.success("로그아웃 되었습니다.")}}),n.adding&&Object(h.a)(M,null),Object(h.a)(L,null,Object(h.a)(B,{user:i,todays:r}),Object(h.a)(x,null)))}const P={layout:{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)",width:"30rem",borderRadius:"0.6rem",backgroundColor:"white","@media (max-width: 768px)":{top:"45%",width:"50rem",height:"70rem"},"@media (max-width: 480px)":{top:"45%",height:"88vh",width:"96vw"}},emptyHeader:{backgroundColor:g.a.dark,height:"3rem",borderRadius:"0.5rem 0.5rem 0 0",borderTop:"1px solid "+g.a.dark,"@media (max-width: 768px)":{height:"5rem"},"@media (max-width: 480px)":{height:"8vh"}},container:{padding:"2rem",display:"flex",flexDirection:"column",justifyContent:"space-between","@media (max-width: 768px)":{height:"60rem"},"@media (max-width: 480px)":{height:"76vh"}}};function W({children:t}){return Object(h.a)("div",{css:P.layout},Object(h.a)("div",{css:P.emptyHeader}),Object(h.a)("div",{css:P.container},t))}const U={layout:{display:"flex",flexDirection:"column",alignItems:"center",padding:"2rem 0 0 0","@media (max-width: 768px)":{padding:"5rem 0 0 0"},"@media (max-width: 480px)":{padding:"8vh 0 0 0"}},text:{fontSize:g.c["#2"],fontWeight:"bold",color:g.a.main,"@media (max-width: 768px)":{fontSize:g.b["#2"]},"@media (max-width: 480px)":{fontSize:g.b["#1"]}},logo:{width:"12rem",display:"table","@media (max-width: 768px)":{width:"30rem"},"@media (max-width: 480px)":{width:"50rem"}}};function V({signup:t}){return Object(h.a)("div",{css:U.layout},Object(h.a)("div",{css:U.text},t?"회원가입":"오늘의 문제"),Object(h.a)("img",{src:"src/styles/logo.png",alt:"로고",css:U.logo}))}var K=n(17);const $={input:{display:"block",fontSize:g.c["#5"],width:"96%",height:"3rem",border:"none",borderBottom:"1px solid "+g.a.light,paddingLeft:"1rem","@media (max-width: 768px)":{fontSize:g.b["#6"],height:"6rem"},"@media (max-width: 480px)":{fontSize:g.b["#4"],height:"10rem"}},button:{fontSize:g.c["#5"],fontWeight:"bold",color:g.a.font,width:"100%",height:"3rem",border:"none",borderRadius:"0.5rem",marginTop:"0.5rem",cursor:"pointer","@media (max-width: 768px)":{fontSize:g.b["#6"],height:"6rem"},"@media (max-width: 480px)":{fontSize:g.b["#4"],height:"10rem",marginTop:"2rem"}}};function J({idInput:t,pwInput:e,onInputChange:n,onLoginButtonClick:a,onSignupButtonClick:o}){return Object(h.a)("div",null,Object(h.a)("input",{value:t,css:$.input,onChange:n("id"),placeholder:"아이디를 입력해주세요."}),Object(h.a)("input",{value:e,css:$.input,onChange:n("pw"),type:"password",placeholder:"비밀번호를 입력해주세요."}),Object(h.a)("button",{type:"button",css:Object(K.a)({...$.button,backgroundColor:g.a.main},";label:LoginFormBody;"),onClick:a},"로그인"),Object(h.a)("button",{type:"button",css:Object(K.a)({...$.button,backgroundColor:g.a.light},";label:LoginFormBody;"),onClick:o},"회원가입"))}function Y(){const t=Object(c.b)(),{id:e,pw:n}=Object(c.c)(t=>t.form.login),a=Object(p.g)();return Object(h.a)(W,null,Object(h.a)(V,null),Object(h.a)(J,{idInput:e,pwInput:n,onInputChange:e=>n=>{t(Object(d.k)({type:e,value:n.target.value}))},onLoginButtonClick:async()=>{const a=await v.a.login(e,n);a?(await m.d.success("로그인 성공"),localStorage.setItem("token",a),t(Object(d.p)(a))):await m.d.fail("아이디 혹은 패스워드가 일치하지 않습니다.")},onSignupButtonClick:()=>{a.push("/page/signup")}}))}function Z(){return Object(c.c)(t=>t.user.token)?Object(h.a)(N,null):Object(h.a)(Y,null)}const G={overlay:{width:"100%",position:"fixed",height:"100%",backgroundColor:"#00000070",zIndex:1}};function X(){const t=Object(c.b)();return Object(h.a)("div",{onClick:()=>{t(Object(d.b)()),t(Object(d.i)())},css:G.overlay})}const tt={input:{display:"block",fontSize:g.c["#5"],width:"96%",height:"3rem",border:"none",borderBottom:"1px solid "+g.a.light,paddingLeft:"1rem",marginTop:"1px","@media (max-width: 768px)":{fontSize:g.b["#6"],height:"6rem"},"@media (max-width: 480px)":{fontSize:g.b["#4"],height:"10rem"}},button:{fontSize:g.c["#5"],fontWeight:"bold",color:g.a.font,width:"100%",height:"3rem",border:"none",borderRadius:"0.5rem",marginTop:"0.5rem",cursor:"pointer",backgroundColor:g.a.main,"@media (max-width: 768px)":{fontSize:g.b["#6"],height:"6rem"},"@media (max-width: 480px)":{fontSize:g.b["#4"],height:"10rem",marginTop:"2rem"}}};function et({nameInput:t,idInput:e,pw1Input:n,pw2Input:a,onInputChange:o,onSignupButtonClick:i}){return Object(h.a)("div",null,Object(h.a)("input",{value:t,css:tt.input,onChange:o("name"),placeholder:"이름을 입력해주세요."}),Object(h.a)("input",{value:e,css:tt.input,onChange:o("id"),placeholder:"아이디를 입력해주세요."}),Object(h.a)("input",{value:n,css:tt.input,onChange:o("pw1"),type:"password",placeholder:"비밀번호를 입력해주세요."}),Object(h.a)("input",{value:a,css:tt.input,onChange:o("pw2"),type:"password",placeholder:"비밀번호를 다시 입력해주세요."}),Object(h.a)("button",{type:"button",css:tt.button,onClick:i},"회원가입"))}function nt(){const t=Object(c.b)(),{name:e,id:n,pw1:a,pw2:o}=Object(c.c)(t=>t.form.signup),i=Object(p.g)();return Object(h.a)(W,null,Object(h.a)(V,{signup:!0}),Object(h.a)(et,{nameInput:e,idInput:n,pw1Input:a,pw2Input:o,onInputChange:e=>n=>{t(Object(d.n)({type:e,value:n.target.value}))},onSignupButtonClick:async()=>{if(!(e&&n&&a&&o))return void await m.d.fail("모든 항목을 입력하셔야 합니다.");if(n.length<4)return void await m.d.fail("아이디는 4글자 이상으로 설정하셔야 합니다.");if(a.length<4)return void await m.d.fail("비밀번호는 4글자 이상으로 설정하셔야 합니다.");if(a!==o)return void await m.d.fail("두 비밀번호가 서로 다릅니다.");if(!await v.a.checkId(n))return void await m.d.fail("이미 사용중인 아이디입니다.");await v.a.signUp(n,a,e)?(await m.d.success("회원가입 성공! 다시 로그인해주세요."),t(Object(d.j)()),i.push("/")):await m.d.fail("뭔가 단단히 잘못됐음")}}))}function at(){return Object(h.a)(nt,null)}const ot=Object(a.lazy)(()=>n.e(4).then(n.bind(null,82))),it=Object(a.lazy)(()=>n.e(3).then(n.bind(null,81)));r.a.render(Object(h.a)(c.a,{store:s},Object(h.a)((function(){const t=Object(c.c)(t=>t.modalShowing);return Object(h.a)(o.a.Fragment,null,Object(h.a)(a.Suspense,{fallback:Object(h.a)("div",null,"로딩중")},t.overlay&&Object(h.a)(X,null),Object(h.a)(l.a,null,Object(h.a)(p.d,null,Object(h.a)(p.b,{exact:!0,path:"/"},Object(h.a)(Z,null)),Object(h.a)(p.b,{path:"/page/signup"},Object(h.a)(at,null)),Object(h.a)(p.b,{path:"/page/todaysquiz"},Object(h.a)(ot,null)),Object(h.a)(p.b,{path:"/page/archive"},Object(h.a)(it,null))))))}),null)),document.getElementById("app"))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,